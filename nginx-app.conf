# This file is used by App Engine flex environment PHP runtime by name convention nginx-app.conf:
# https://cloud.google.com/appengine/docs/flexible/php/runtime#customize_nginx

# App Engine rewrites everything to index.php$uri, this prevents us to catch
# anything else with `location` block, so the hack is to catch it with another
# rewrite that lets us handle in our own `location ~ ^/myapp` below
# (https://github.com/GoogleCloudPlatform/buildpacks/blob/ff2ea2737a928087dcec192bf3ce103dc356ad5e/pkg/nginx/nginx.go#L93)
rewrite ^/index.php(.*)$ /myapp$1;

# Redirect HTTP to HTTPS by checking the X-Forwarded-Proto header
if ($http_x_forwarded_proto != "https") {
    return 301 https://$host$request_uri;
}

# Special handling for /app, this is an SPA so always serve index.html or any
# static file if found.
location ~ ^/myapp/app(/.*)?$ {
    # Try to serve the file directly or a specific file, fallback to index.html and disallow caching
    try_files /app$1 @index_no_cache;
}

location @index_no_cache {
    try_files /app/index.html =404;

    # Set headers to prevent caching
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
}

# Handle this our way first because we want to try serving a file if it matches,
# otherwise go back to app engine's default index.php `location` block.
location ~ ^/myapp(.*)$ {
    # We can't send to /index.php$1 directly here because that would be caught
    # by our `rewrite ^/index.php` causing infinite rewrites. So instead send
    # this to the @fallback `location` below where we can do a final rewrite
    # with the `last` keyword.
    try_files $1 @fallback;
}
location @fallback {
    rewrite ^/myapp(.*)$ /index.php$1 last;
}
